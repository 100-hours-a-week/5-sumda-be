version: "3.8"
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - blue
      - green

  blue:
    platform: linux/amd64
    container_name: blue
    build:
      context: .
      dockerfile: Dockerfile2

    environment:
      - SPRING_PROFILES_ACTIVE=blue
    ports:
      - "8081:8081"

  green:
    platform: linux/amd64
    container_name: green
    build:
      context: .
      dockerfile: Dockerfile2
    environment:
      - SPRING_PROFILES_ACTIVE=green
    ports:
      - "8082:8082"

#services:
#  be-blue:
#    image: ghcr.io/kwongiyeon/5-team-daramgil-sumda-be:latest
#    platform: linux/amd64
#    ports:
#      - "8081:8080"
#    env_file: .env
#    environment:
#      DB_URL: ${DB_URL}
#      DB_USERNAME: ${DB_USERNAME}
#      DB_PASSWORD: ${DB_PASSWORD}
#      OPENAI_API_KEY: ${OPENAI_API_KEY}
#      AIR_PUBLIC_API_KEY: ${AIR_PUBLIC_API_KEY}
#      WEATHER_PUBLIC_API_KEY: ${WEATHER_PUBLIC_API_KEY}
#      SENTRY_DSN: ${SENTRY_DSN}
#      SENTRY_AUTH_TOKEN: ${SENTRY_AUTH_TOKEN}
#      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_ID: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_ID}
#      JWT_SECRET: ${JWT_SECRET}
#    container_name: be-blue
#    network_mode: bridge
#    restart: always
#
#  be-green:
#    image: ghcr.io/kwongiyeon/5-team-daramgil-sumda-be:latest
#    platform: linux/amd64
#    ports:
#      - "8082:8080"
#    env_file: .env
#    environment:
#      DB_URL: ${DB_URL}
#      DB_USERNAME: ${DB_USERNAME}
#      DB_PASSWORD: ${DB_PASSWORD}
#      OPENAI_API_KEY: ${OPENAI_API_KEY}
#      AIR_PUBLIC_API_KEY: ${AIR_PUBLIC_API_KEY}
#      WEATHER_PUBLIC_API_KEY: ${WEATHER_PUBLIC_API_KEY}
#      SENTRY_DSN: ${SENTRY_DSN}
#      SENTRY_AUTH_TOKEN: ${SENTRY_AUTH_TOKEN}
#      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_ID: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_ID}
#      JWT_SECRET: ${JWT_SECRET}
#    container_name: be-green
#    network_mode: bridge
#    restart: always