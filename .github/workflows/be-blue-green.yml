name: CI/CD with Docker Compose and Blue-Green Deployment

on:
  push:
    branches: [ develop ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 소스 코드 체크아웃
      - uses: actions/checkout@v3

      # 2. Docker 설치
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # 3. Docker Compose 설치
      - name: Install Docker Compose
        run: sudo apt-get install docker-compose -y

      # 4. .env 파일을 로컬에서 생성 후 EC2로 전송
      - name: Create and send .env file to EC2
        run: |
          echo "DB_URL=${{ secrets.DB_URL }}" > .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          echo "AIR_PUBLIC_API_KEY=${{ secrets.AIR_PUBLIC_API_KEY }}" >> .env
          echo "WEATHER_PUBLIC_API_KEY=${{ secrets.WEATHER_PUBLIC_API_KEY }}" >> .env
          echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> .env
          echo "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}" >> .env
          echo "SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_ID=${{ secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_ID }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env

      - name: Send .env to EC2
        uses: appleboy/scp-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_BACK_BLUE }}
          key: ${{ secrets.EC2_KEY }}
          source: "./.env"
          target: "/home/ubuntu/project/"

      # 5. docker-compose.yml 파일을 EC2로 전송
      - name: Send docker-compose.yml to EC2
        uses: appleboy/scp-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_BACK_BLUE }}
          key: ${{ secrets.EC2_KEY }}
          source: "./docker-compose.yml"
          target: "/home/ubuntu/project/"

      # 6. Deploy.sh 파일을 EC2로 전송
      - name: Send deploy.sh
        uses: appleboy/scp-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_BACK_BLUE }}
          key: ${{ secrets.EC2_KEY }}
          source: "./deploy.sh"
          target: "/home/ubuntu/"

      # 7. Docker Compose 및 Blue-Green 배포 실행
      - name: Execute deploy.sh on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_BACK_BLUE }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /home/ubuntu/
            chmod +x ./deploy.sh
            ./deploy.sh /home/ubuntu/project/docker-compose.yml

      # 8. 컨테이너 상태 확인
      - name: Check Docker containers
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_BACK_BLUE }} "docker ps"